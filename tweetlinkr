#!/usr/bin/perl -w
# Copyright 2010 Kevin Spencer <kevin@kevinspencer.org>
#
# Permission to use, copy, modify, distribute, and sell this software and its
# documentation for any purpose is hereby granted without fee, provided that
# the above copyright notice appear in all copies and that both that
# copyright notice and this permission notice appear in supporting
# documentation. No representations are made about the suitability of this
# software for any purpose. It is provided "as is" without express or
# implied warranty.
#
################################################################################

use File::HomeDir;
use File::Spec;
use Net::Twitter;
use strict;

our $VERSION = '0.04';

my $twitter_user = shift || 'kevin_spencer';
my $tokens_file = 
    File::Spec->catfile(File::HomeDir->my_home(), '.accesstokens');

#
# consumer_key and consumer_secret are provided by twitter on app registration
#
my $consumer_key    = 'deVbUDBadJHQn3dNsnqsA';
my $consumer_secret = 'ZQVMbIvkGjf9mlyP2BfDzHWTtyj7NoBrUHMTqLfTzoI';

my $nt = Net::Twitter->new(
    traits          => ['API::REST', 'OAuth'],
    consumer_key    => $consumer_key,
    consumer_secret => $consumer_secret
);

# if we've been authorized before, there should be access tokens on disk...
my($access_token, $access_token_secret) = retrieve_tokens();
if ($access_token && $access_token_secret) {
    $nt->access_token($access_token);
    $nt->access_token_secret($access_token_secret);
}

if (! $nt->authorized()) {
    get_twitter_authorization();
    exit();
}

#
# twitter breaks up the user_timeline into pages so we have to iterate
# through each page of tweets...
# 

eval {
    for (my $page = 1; ; ++$page) {
        my $args   = { screen_name => $twitter_user, page => $page };
        my $tweets = $nt->user_timeline($args);
        last if (! @$tweets);
        for my $tweet (@$tweets) {
            if ($tweet->{text} =~ /http:/) {
                print $tweet->{text}, "\n";
            }
        }
    }
};

if (my $err = $@) {
    die "Twitter error: ", $err->error(), "\n";
}

#
# if we're not authorized to continue we'll have to visit Twitter manually
# authorize tweetlinkr, add the pin# to obtain/store our access tokens...
#

sub get_twitter_authorization {
    print "Visit the following URL in your browser to authorize this app:\n" . 
        $nt->get_authorization_url() . "\n";
    print "Once done, enter the PIN# ";
    
    my $pin = <STDIN>; # wait for user input
    chomp $pin;

    eval {
        print "PIN received, contacting twitter to obtain access tokens...\n";
        my ($access_token, $access_token_secret, $user_id, $screen_name) = 
            $nt->request_access_token(verifier => $pin);

        if ($access_token && $access_token_secret) {
            print "Tokens received, storing to $tokens_file...\n";
            store_tokens($access_token, $access_token_secret);
            print "Done.  Please run tweetlinkr again.\n";
        } else {
            print "Twitter error: did not receive access tokens.\n";
        }
    };

    if (my $err = $@) {
        die "Twitter error: ", $err->error(), "\n";
    }
}

sub retrieve_tokens {
    if (-e $tokens_file) {
        open(TOKENS, $tokens_file) || 
            die "Could not read $tokens_file - $!\n";
        my $a_token = <TOKENS>;
        chomp($a_token);
        my $a_secret = <TOKENS>;
        chomp($a_secret);
        close(TOKENS);
        return ($a_token, $a_secret);
    }
    return;
}

sub store_tokens {
    my ($a_token, $a_token_secret) = @_;

    open(TOKENS, ">$tokens_file") ||
        die "Could not create $tokens_file - $!\n";
    print TOKENS $a_token, "\n";
    print TOKENS $a_token_secret, "\n";
    close(TOKENS);
}
