#!/usr/bin/perl -w
################################################################################

use Data::Dumper;
use Net::Twitter;
use strict;

$Data::Dumper::Indent = 1;
my $accessTokensFile = 'accesstokens';

my $nt = Net::Twitter->new(
    traits          => ['API::REST', 'OAuth'],
    consumer_key    => "deVbUDBadJHQn3dNsnqsA",
    consumer_secret => "ZQVMbIvkGjf9mlyP2BfDzHWTtyj7NoBrUHMTqLfTzoI",
);

# You'll save the token and secret in cookie, config file or session database
my($access_token, $access_token_secret) = restore_tokens();
if ($access_token && $access_token_secret) {
    $nt->access_token($access_token);
    $nt->access_token_secret($access_token_secret);
}

if ( $nt->authorized() ) {
    eval {
        for (my $page = 1; ; ++$page) {
            print "Finding page $page\n";
            my $tweets = $nt->user_timeline(
                {
                    screen_name => "kevin_spencer",
                    page => $page
                }
            );
            for my $tweet (@$tweets) {
                # this is so hacky...
                if ($tweet->{text} =~ /http:/) {
                    print $tweet->{text}, "\n";
                }
            }
            last if ($page == 3);
        }
    };
    if (my $err = $@) {
        warn "HTTP Response Code: ", $err->code, "\n",
            "HTTP Message......: ", $err->message, "\n",
            "Twitter error.....: ", $err->error, "\n";
    }
} else {
    # The client is not yet authorized: Do it now
    print "Visit the following URL in your browser to authorize this app:\n" . 
        $nt->get_authorization_url . "\n";
    print "Once done, enter the PIN#";
    my $pin = <STDIN>; # wait for input
    chomp $pin;

    my($access_token, $access_token_secret, $user_id, $screen_name) = 
        $nt->request_access_token(verifier => $pin);
    save_tokens($access_token, $access_token_secret);
}


sub restore_tokens {
    open(TOKENS, $accessTokensFile) || return;
    my $a_token = <TOKENS>;
    chomp($a_token);
    my $a_secret = <TOKENS>;
    chomp($a_secret);
    close(TOKENS);

    return ($a_token, $a_secret);
}

sub save_tokens {
    my ($a_token, $a_token_secret) = @_;

    open(TOKENS, ">$accessTokensFile") ||
        die "Could not create $accessTokensFile - $!\n";
    print TOKENS $a_token, "\n";
    print TOKENS $a_token_secret, "\n";
    close(TOKENS);
}

