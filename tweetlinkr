#!/usr/bin/perl -w
# Copyright 2010 Kevin Spencer <kevin@kevinspencer.org>
#
# Permission to use, copy, modify, distribute, and sell this software and its
# documentation for any purpose is hereby granted without fee, provided that
# the above copyright notice appear in all copies and that both that
# copyright notice and this permission notice appear in supporting
# documentation. No representations are made about the suitability of this
# software for any purpose. It is provided "as is" without express or
# implied warranty.
#
################################################################################

use Net::Twitter;
use strict;

my $twitter_user = shift || 'kevin_spencer';
my $tokens_file  = '~/.accesstokens';

my $nt = Net::Twitter->new(
    traits          => ['API::REST', 'OAuth'],
    consumer_key    => "deVbUDBadJHQn3dNsnqsA",
    consumer_secret => "ZQVMbIvkGjf9mlyP2BfDzHWTtyj7NoBrUHMTqLfTzoI",
);

# if we've been authorized before, there should be access tokens on disk...
my($access_token, $access_token_secret) = retrieve_tokens();
if ($access_token && $access_token_secret) {
    $nt->access_token($access_token);
    $nt->access_token_secret($access_token_secret);
}

# if we're not authorized to continue we'll have to visit Twitter manually
# authorize tweetlinkr, add the pin# to obtain/store our access tokens...
if (! $nt->authorized()) {
    print "Visit the following URL in your browser to authorize this app:\n" . 
        $nt->get_authorization_url() . "\n";
    print "Once done, enter the PIN#";
    my $pin = <STDIN>; # wait for input
    chomp $pin;

    my($access_token, $access_token_secret, $user_id, $screen_name) = 
        $nt->request_access_token(verifier => $pin);
    store_tokens($access_token, $access_token_secret);
    # TODO: do not exit here, should re-try after storing tokens...
    exit();
}

eval {
    for (my $page = 1; ; ++$page) {
        my $tweets = $nt->user_timeline(
            {
                screen_name => $twitter_user,
                page => $page
            }
        );
        for my $tweet (@$tweets) {
            # this feels hacky...
            if ($tweet->{text} =~ /http:/) {
                print $tweet->{text}, "\n";
            }
        }
        # TODO: search entire timeline instead of first 3 pages...
        last if ($page == 3);
    }
};

if (my $err = $@) {
    warn "HTTP Response Code: ", $err->code(), "\n",
        "HTTP Message......: ", $err->message(), "\n",
        "Twitter error.....: ", $err->error(), "\n";
}

sub retrieve_tokens {
    open(TOKENS, $tokens_file) || return;
    my $a_token = <TOKENS>;
    chomp($a_token);
    my $a_secret = <TOKENS>;
    chomp($a_secret);
    close(TOKENS);
    return ($a_token, $a_secret);
}

sub store_tokens {
    my ($a_token, $a_token_secret) = @_;

    open(TOKENS, ">$tokens_file") ||
        die "Could not create $tokens_file - $!\n";
    print TOKENS $a_token, "\n";
    print TOKENS $a_token_secret, "\n";
    close(TOKENS);
}
